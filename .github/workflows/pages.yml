name: Deploy to GitHub Pages

on:
  push:
    branches: [ main ]

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json
        
    - name: Check versions
      run: |
        node --version
        npm --version
        
    - name: Install dependencies
      run: |
        cd frontend
        rm -rf node_modules package-lock.json
        npm cache clean --force
        NPM_CONFIG_UPDATE_NOTIFIER=false npm install --legacy-peer-deps --no-audit --no-fund --silent
        echo "Reinstalling react-scripts specifically..."
        npm install react-scripts@5.0.1 --save
        
    - name: Verify installation
      run: |
        cd frontend
        npm list --depth=0
        echo "Checking react-scripts installation:"
        ls -la node_modules/react-scripts/
        echo "React-scripts version:"
        npm list react-scripts
        cat package.json | grep -A 5 -B 5 "react-scripts"
        echo "Checking for .env files:"
        ls -la .env* || echo "No .env files found"
        
    - name: Setup environment
      run: |
        cd frontend
        if [ ! -f .env.production ]; then
          echo "Creating .env.production from env.production.txt"
          cp env.production.txt .env.production
        fi
        echo "Environment file contents:"
        head -10 .env.production
        
    - name: Clean build directory
      run: |
        cd frontend
        rm -rf build
        echo "Cleaning react-scripts cache..."
        rm -rf node_modules/.cache
        rm -rf .cache
        
    - name: Check for syntax errors
      run: |
        cd frontend
        echo "Checking for syntax errors..."
        npx eslint src/ --ext .js,.jsx --max-warnings 0 || echo "ESLint found issues but continuing..."
        
    - name: Build
      run: |
        cd frontend
        echo "Starting build process..."
        echo "Node version: $(node --version)"
        echo "NPM version: $(npm --version)"
        echo "Current directory: $(pwd)"
        echo "Contents: $(ls -la)"
        echo "Package.json exists: $(test -f package.json && echo 'YES' || echo 'NO')"
        echo "Trying direct react-scripts build..."
        CI=false GENERATE_SOURCEMAP=false NPM_CONFIG_UPDATE_NOTIFIER=false npx react-scripts build
        
    - name: Check build output
      run: |
        cd frontend
        ls -la build/
        
    - name: Setup Pages
      uses: actions/configure-pages@v4
      
    - name: Upload artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: './frontend/build'

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
